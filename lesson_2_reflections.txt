1. What happens when you initialize a repository? Why do you need to do it?
It creates a git repository. We need this to track the changes that are made to files in that repository.

2.How is the staging area different from the working directory and the repository? What value do you think it offers?
Staging area helps to group the files logically to commit.

3.How can you use the staging area to make sure you have one commit per logical change?
To see if you are trying to commit correct changes that you intended in a file.

4.What are some situations when branches would be helpful in keeping your history organized? How would branches help?
- To add a new functionlaity which is still under test
- To add a new language based version of code e.t.c.

Branches help to work on a test branch that you would work at a point of time and at the same time you can revert back to your working branch to chekout to move/show the code in production.

5. How do the diagrams help you visualize the branch structure?
It makes it easy to figure out current branch or commit we are in and the overall structure of the branches 

6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
it helps to pull all the commits that are related to merge commit.To have easy understanding of how branches are laid out.

7.What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
if merges automatically we might get unexpected results some time. At the same time if it is done automatically without effecting any code logic it should be fine.
Time saving - pros
Code loss - Cons